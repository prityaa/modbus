========================================================================
fun id 3 : holding reg 
========================================================================
command :  
	0x0 0x0 0x0 0x0 0x0 	=> packet.
	0x6 					=> total bytes of the packet.
	0x1 					=> slave id 
	0x3 					=> fun id
	0x9c 0x40 				=> start reg	(40000)
	0x0 0x2 				=> num of reg	(2)
	
response : 
	0x0 0x0 0x0 0x0 0x0 	=> packet
	0x7 					=> total bytes of the packet .
	0x1 					=> slave id 
	0x3 					=> fun id
	0x4 					=> total bytes of the data
	0x15 					=> data byte 1	
	0x18 					=> data byte 2	=> reg 1				
	0x0 					=> data byte 3
	0x4 					=> data byte 4	=> reg 2

command :  0x0 0x0 0x0 0x0 0x0 0x6 0x1 0x2 0x27 0x10 0x0 0x2 
response : 0x0 0x0 0x0 0x0 0x0 0x4 0x1 0x2 0x1 0x0

========================================================================
fun id 2 : descrete i/p 
========================================================================

command : 
	0x0 0x0 0x0 0x0 0x0 	=> packet
	0x6 					=> total bytes of the packet.
	0x1 					=> slave id
	0x2 					=> fun id
	0x27 0x10 				=> start reg (10000)
	0x0 0x10 				=> num of reg (16)	
	
response : 
	0x0 0x0 0x0 0x0 0x0 
	0x5						=> total bytes of the packet.
	0x1 					=> slave id
	0x2 					=> fun id
	0x2 					=> total bytes of the data
	0x0 					=> data byte 1
	0x6						=> data byte 2

	NOTE : data byte (in fun id 2) can represent 8 bits of data

	date byte :
		0x0  		0x6 
	0000 0000	0110 0000
	
	getting all 176 alams list.
	command : 0x0 0x0 0x0 0x0 0x0 0x6 0x1 0x2 0x27 0x10 0x0 0xb0 
	response : 0x0 0x0 0x0 0x0 0x0 0x19 0x1 0x2 0x16 0x0 0x6 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
========================================================================

reference : 
	http://www.rtaautomation.com/technologies/modbus-tcpip/
	http://www.simplymodbus.ca/FC02.htm

ma
